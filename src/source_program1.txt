                            # in this source code, lines beginning with "#" are comments which are not interpreted by the compiler

                            # Program 1: A program that reads 20 numbers (integers) from the keyboard, prints the
                            # numbers to the console printer, requests a number from the user, and searches the 20
                            #numbers read in for the number closest to the number entered by the user. Print the
                            #number entered by the user and the number closest to that number. Your numbers should
                            #not be 1…10, but distributed over the range of 0 … 65,535. Therefore, as you read a
                            #character in, you need to check it is a digit, convert it to a number, and assemble the
                            #integer

                            # each instruction is given as:
                            # opcode, gpr num, ix num, indirect addressing bit, address

XXX: 1000                   # the number 1000 will need to be somewhere in this program so that it can be refered to as the 
                            # location at which the storage of the 20 numbers will begin and so we put it here at the end
                            # first read in 20 numbers and store them at addresses 1000...1020 so they are far from the program
                            # so we track the current location for storing in memory address XXX 
YYY: 1                      # we also will frequently increment and decrement the XXX position by 1
                            # and so it is useful to have the 1 stored here in memory for using AMR and SMR
ZZZ: 650000                 # this location in memory will be used to store the closest distance among all the numbers 
                            # throughout the algorithm's running
WWW: 0                      # this location will be used to store the actual number which is closest so far among all the numbers
                            # checked in the algorithm
                            # now read the 20 numbers (program begins)
QQQ: 0                      # memory location where we'll store the contents of the target number

IN 0, 0                     # we read in a number from keyboard (devid 0) into gpr 0
                            
                            # store that number in the current location for storing (which is XXX)
STR 0, 0, 1, XXX

                            # now increment storage location stored at XXX using gpr 1 which is currenlty empty (0)
AMR 1, 0, 0, XXX            # first get the current location from XXX into gpr 1
AIR 1, 1                    # now add 1 to gpr 1 to get the incremented storage location
STR 1, 0, 0, XXX            # store the incremented storage location back at XXX

                            # now we need to repeat this process 19 more times,
                            # that is, we need to 1. read in a number,
                            #                     2. store that number at the current storage location in XXX,
                            #                     3. increment the current storage location held at XXX
                            # time 2
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 3
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 4
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 5
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 6
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 7
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 8
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 9
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 10
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 11
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 12
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 13
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 14
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 15
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 16
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 17
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 18
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 19
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
                            # time 20
IN 0, 0                     # 1 read in number
STR 0, 0, 1, XXX            # 2 store number at XXX location (indirect)
AMR 1, 0, 0, XXX            # 3 update location at XXX (read into gpr1)
AIR 1, 1                    # 3 update location at XXX (increment gpr1)
STR 1, 0, 0, XXX            # 3 update location at XXX (store gpr1 at xxx)
 

                            # now we have all the numbers stored and we need
                            # to read in a new number that will be kept in gpr3
                            # which is the target number (one which we want to find
                            # the closest neighbor of among the first 20 inputs)
IN 3, 0                     # 
STR 3, 0, 0, QQQ            # store the target number at QQQ in memory

                            # now we want to go thru all the numbers again 
                            # for ease, we will now go from the end to the beginning
                            # still using memory location XXX to store the current 
                            # location being considered
                            # so to start, we need to decrement it back from 1021 to 1020
AMR 1, 0, 0, XXX            # read in XXX to gpr1
SIR 1, 1                    # decrement gpr1 by one
STR 1, 0, 0, XXX            # store gpr1 back to location XXX
LDR 0, 0, 1, XXX            # now read in memory location indirectly from XXX

SMR 0, 0, 0, QQQ            # find difference between the current input number (gpr0)
                            # and the target number (stored at QQQ in memory)

JGE 0, 2, 0, 0              # jump if this new diff is greater than or equal to the current minimum distance
                            # assume that we do have negative numbers after all






